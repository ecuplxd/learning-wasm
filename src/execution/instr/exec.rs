use crate::binary::instruction::Instruction;
use crate::execution::errors::VMState;
use crate::execution::vm::VM;

impl VM {
    pub fn exec_instr(&mut self, instr: &Instruction) -> VMState {
        println!("执行指令：{:?}", instr);

        match instr {
            Instruction::Unreachable => self.unreachable()?,
            Instruction::Nop => self.nop(),
            Instruction::Block(block) => self.block(block),
            Instruction::Loop(block) => self.loop_(block),
            Instruction::If(block) => self.if_(block),
            Instruction::Else => self.else_(),
            Instruction::End => self.end(),
            Instruction::Br(l) => self.br(*l)?,
            Instruction::BrIf(l) => self.br_if(*l)?,
            Instruction::BrTable(arg) => self.br_table(arg)?,
            Instruction::Return => self.return_()?,
            Instruction::Call(idx) => self.call(*idx)?,
            Instruction::CallIndirect(type_i, table_i) => self.call_indirect(*type_i, *table_i)?,
            Instruction::Drop => self.drop_(),
            Instruction::Select => self.select(),
            Instruction::Select2(x, type_) => self.select2(*x, type_),
            Instruction::LocalGet(idx) => self.local_get(*idx),
            Instruction::LocalSet(idx) => self.local_set(*idx),
            Instruction::LocalTee(idx) => self.local_tee(*idx),
            Instruction::GlobalGet(idx) => self.global_get(*idx),
            Instruction::GlobalSet(idx) => self.global_set(*idx)?,
            Instruction::TableGet(idx) => self.table_get(*idx)?,
            Instruction::TableSet(idx) => self.table_set(*idx)?,
            Instruction::I32Load(memarg) => self.i32_load(memarg)?,
            Instruction::I64Load(memarg) => self.i64_load(memarg)?,
            Instruction::F32Load(memarg) => self.f32_load(memarg)?,
            Instruction::F64Load(memarg) => self.f64_load(memarg)?,
            Instruction::I32Load8S(memarg) => self.i32_load8_s(memarg)?,
            Instruction::I32Load8U(memarg) => self.i32_load8_u(memarg)?,
            Instruction::I32Load16S(memarg) => self.i32_load16_s(memarg)?,
            Instruction::I32Load16U(memarg) => self.i32_load16_u(memarg)?,
            Instruction::I64Load8S(memarg) => self.i64_load8_s(memarg)?,
            Instruction::I64Load8U(memarg) => self.i64_load8_u(memarg)?,
            Instruction::I64Load16S(memarg) => self.i64_load16_s(memarg)?,
            Instruction::I64Load16U(memarg) => self.i64_load16_u(memarg)?,
            Instruction::I64Load32S(memarg) => self.i64_load32_s(memarg)?,
            Instruction::I64Load32U(memarg) => self.i64_load32_u(memarg)?,
            Instruction::I32Store(memarg) => self.i32_store(memarg)?,
            Instruction::I64Store(memarg) => self.i64_store(memarg)?,
            Instruction::F32Store(memarg) => self.f32_store(memarg)?,
            Instruction::F64Store(memarg) => self.f64_store(memarg)?,
            Instruction::I32Store8(memarg) => self.i32_store8(memarg)?,
            Instruction::I32Store16(memarg) => self.i32_store16(memarg)?,
            Instruction::I64Store8(memarg) => self.i64_store8(memarg)?,
            Instruction::I64Store16(memarg) => self.i64_store16(memarg)?,
            Instruction::I64Store32(memarg) => self.i64_store32(memarg)?,
            Instruction::MemorySize(idx) => self.memory_size(*idx),
            Instruction::MemoryGrow(idx) => self.memory_grow(*idx),
            Instruction::I32Const(v) => self.i32_const(*v),
            Instruction::I64Const(v) => self.i64_const(*v),
            Instruction::F32Const(v) => self.f32_const(*v),
            Instruction::F64Const(v) => self.f64_const(*v),
            Instruction::I32Eqz => self.i32_eqz(),
            Instruction::I32Eq => self.i32_eq(),
            Instruction::I32Ne => self.i32_ne(),
            Instruction::I32LtS => self.i32_lt_s(),
            Instruction::I32LtU => self.i32_lt_u(),
            Instruction::I32GtS => self.i32_gt_s(),
            Instruction::I32GtU => self.i32_gt_u(),
            Instruction::I32LeS => self.i32_le_s(),
            Instruction::I32LeU => self.i32_le_u(),
            Instruction::I32GeS => self.i32_ge_s(),
            Instruction::I32GeU => self.i32_ge_u(),
            Instruction::I64Eqz => self.i64_eqz(),
            Instruction::I64Eq => self.i64_eq(),
            Instruction::I64Ne => self.i64_ne(),
            Instruction::I64LtS => self.i64_lt_s(),
            Instruction::I64LtU => self.i64_lt_u(),
            Instruction::I64GtS => self.i64_gt_s(),
            Instruction::I64GtU => self.i64_gt_u(),
            Instruction::I64LeS => self.i64_le_s(),
            Instruction::I64LeU => self.i64_le_u(),
            Instruction::I64GeS => self.i64_ge_s(),
            Instruction::I64GeU => self.i64_ge_u(),
            Instruction::F32Eq => self.f32_eq(),
            Instruction::F32Ne => self.f32_ne(),
            Instruction::F32Lt => self.f32_lt(),
            Instruction::F32Gt => self.f32_gt(),
            Instruction::F32Le => self.f32_le(),
            Instruction::F32Ge => self.f32_ge(),
            Instruction::F64Eq => self.f64_eq(),
            Instruction::F64Ne => self.f64_ne(),
            Instruction::F64Lt => self.f64_lt(),
            Instruction::F64Gt => self.f64_gt(),
            Instruction::F64Le => self.f64_le(),
            Instruction::F64Ge => self.f64_ge(),
            Instruction::I32Clz => self.i32_clz(),
            Instruction::I32Ctz => self.i32_ctz(),
            Instruction::I32Popcnt => self.i32_popcnt(),
            Instruction::I32Add => self.i32_add(),
            Instruction::I32Sub => self.i32_sub(),
            Instruction::I32Mul => self.i32_mul(),
            Instruction::I32DivS => self.i32_div_s()?,
            Instruction::I32DivU => self.i32_div_u()?,
            Instruction::I32RemS => self.i32_rem_s()?,
            Instruction::I32RemU => self.i32_rem_u()?,
            Instruction::I32And => self.i32_and(),
            Instruction::I32Or => self.i32_or(),
            Instruction::I32Xor => self.i32_xor(),
            Instruction::I32Shl => self.i32_shl(),
            Instruction::I32ShrS => self.i32_shr_s(),
            Instruction::I32ShrU => self.i32_shr_u(),
            Instruction::I32Rotl => self.i32_rotl(),
            Instruction::I32Rotr => self.i32_rotr(),
            Instruction::I64Clz => self.i64_clz(),
            Instruction::I64Ctz => self.i64_ctz(),
            Instruction::I64Popcnt => self.i64_popcnt(),
            Instruction::I64Add => self.i64_add(),
            Instruction::I64Sub => self.i64_sub(),
            Instruction::I64Mul => self.i64_mul(),
            Instruction::I64DivS => self.i64_div_s()?,
            Instruction::I64DivU => self.i64_div_u()?,
            Instruction::I64RemS => self.i64_rem_s()?,
            Instruction::I64RemU => self.i64_rem_u()?,
            Instruction::I64And => self.i64_and(),
            Instruction::I64Or => self.i64_or(),
            Instruction::I64Xor => self.i64_xor(),
            Instruction::I64Shl => self.i64_shl(),
            Instruction::I64ShrS => self.i64_shr_s(),
            Instruction::I64ShrU => self.i64_shr_u(),
            Instruction::I64Rotl => self.i64_rotl(),
            Instruction::I64Rotr => self.i64_rotr(),
            Instruction::F32Abs => self.f32_abs(),
            Instruction::F32Neg => self.f32_neg(),
            Instruction::F32Ceil => self.f32_ceil(),
            Instruction::F32Floor => self.f32_floor(),
            Instruction::F32Trunc => self.f32_trunc(),
            Instruction::F32Nearest => self.f32_nearest(),
            Instruction::F32Sqrt => self.f32_sqrt(),
            Instruction::F32Add => self.f32_add(),
            Instruction::F32Sub => self.f32_sub(),
            Instruction::F32Mul => self.f32_mul(),
            Instruction::F32Div => self.f32_div(),
            Instruction::F32Min => self.f32_min(),
            Instruction::F32Max => self.f32_max(),
            Instruction::F32Copysign => self.f32_copysign(),
            Instruction::F64Abs => self.f64_abs(),
            Instruction::F64Neg => self.f64_neg(),
            Instruction::F64Ceil => self.f64_ceil(),
            Instruction::F64Floor => self.f64_floor(),
            Instruction::F64Trunc => self.f64_trunc(),
            Instruction::F64Nearest => self.f64_nearest(),
            Instruction::F64Sqrt => self.f64_sqrt(),
            Instruction::F64Add => self.f64_add(),
            Instruction::F64Sub => self.f64_sub(),
            Instruction::F64Mul => self.f64_mul(),
            Instruction::F64Div => self.f64_div(),
            Instruction::F64Min => self.f64_min(),
            Instruction::F64Max => self.f64_max(),
            Instruction::F64Copysign => self.f64_copysign(),
            Instruction::I32WrapI64 => self.i32_wrap_i64(),
            Instruction::I32TruncF32S => self.i32_trunc_f32_s(),
            Instruction::I32TruncF32U => self.i32_trunc_f32_u(),
            Instruction::I32TruncF64S => self.i32_trunc_f64_s(),
            Instruction::I32TruncF64U => self.i32_trunc_f64_u(),
            Instruction::I64ExtendI32S => self.i64_extend_i32_s(),
            Instruction::I64ExtendI32U => self.i64_extend_i32_u(),
            Instruction::I64TruncF32S => self.i64_trunc_f32_s(),
            Instruction::I64TruncF32U => self.i64_trunc_f32_u(),
            Instruction::I64TruncF64S => self.i64_trunc_f64_s(),
            Instruction::I64TruncF64U => self.i64_trunc_f64_u(),
            Instruction::F32ConvertI32S => self.f32_convert_i32_s(),
            Instruction::F32ConvertI32U => self.f32_convert_i32_u(),
            Instruction::F32ConvertI64S => self.f32_convert_i64_s(),
            Instruction::F32ConvertI64U => self.f32_convert_i64_u(),
            Instruction::F32DemoteF64 => self.f32_demote_f64(),
            Instruction::F64ConvertI32S => self.f64_convert_i32_s(),
            Instruction::F64ConvertI32U => self.f64_convert_i32_u(),
            Instruction::F64ConvertI64S => self.f64_convert_i64_s(),
            Instruction::F64ConvertI64U => self.f64_convert_i64_u(),
            Instruction::F64PromoteF32 => self.f64_promote_f32(),
            Instruction::I32ReinterpretF32 => self.i32_reinterpret_f32(),
            Instruction::I64ReinterpretF64 => self.i64_reinterpret_f64(),
            Instruction::F32ReinterpretI32 => self.f32_reinterpret_i32(),
            Instruction::F64ReinterpretI64 => self.f64_reinterpret_i64(),
            Instruction::I32Extend8S => self.i32_extend8_s(),
            Instruction::I32Extend16S => self.i32_extend16_s(),
            Instruction::I64Extend8S => self.i64_extend8_s(),
            Instruction::I64Extend16S => self.i64_extend16_s(),
            Instruction::I64Extend32S => self.i64_extend32_s(),
            Instruction::RefNull(x) => self.ref_null(*x),
            Instruction::RefIsNull => self.ref_is_null(),
            Instruction::RefFunc(idx) => self.ref_func(*idx),
            Instruction::I32TruncSatF32S => self.i32_trunc_sat_f32_s(),
            Instruction::I32TruncSatF32U => self.i32_trunc_sat_f32_u(),
            Instruction::I32TruncSatF64S => self.i32_trunc_sat_f64_s(),
            Instruction::I32TruncSatF64U => self.i32_trunc_sat_f64_u(),
            Instruction::I64TruncSatF32S => self.i64_trunc_sat_f32_s(),
            Instruction::I64TruncSatF32U => self.i64_trunc_sat_f32_u(),
            Instruction::I64TruncSatF64S => self.i64_trunc_sat_f64_s(),
            Instruction::I64TruncSatF64U => self.i64_trunc_sat_f64_u(),
            Instruction::MemoryInit(segment, idx) => self.memory_init(*segment, *idx)?,
            Instruction::DataDrop(data_idx) => self.data_drop(*data_idx),
            Instruction::MemoryCopy(src_idx, dst_idx) => self.memory_copy(*src_idx, *dst_idx)?,
            Instruction::MemoryFill(idx) => self.memory_fill(*idx)?,
            Instruction::TableInit(elem_idx, table_idx) => self.table_init(*elem_idx, *table_idx)?,
            Instruction::ElemDrop(idx) => self.elem_drop(*idx),
            Instruction::TableCopy(dst_idx, src_idx) => self.table_copy(*dst_idx, *src_idx)?,
            Instruction::TableGrow(idx) => self.table_grow(*idx),
            Instruction::TableSize(idx) => self.table_size(*idx),
            Instruction::TableFill(idx) => self.table_fill(*idx)?,
            Instruction::V128Load(memarg) => self.v128_load(memarg)?,
            Instruction::V128Load8x8S(memarg) => self.v128_load8x8_s(memarg)?,
            Instruction::V128Load8x8U(memarg) => self.v128_load8x8_u(memarg)?,
            Instruction::V128Load16x4S(memarg) => self.v128_load16x4_s(memarg)?,
            Instruction::V128Load16x4U(memarg) => self.v128_load16x4_u(memarg)?,
            Instruction::V128Load32x2S(memarg) => self.v128_load32x2_s(memarg)?,
            Instruction::V128Load32x2U(memarg) => self.v128_load32x2_u(memarg)?,
            Instruction::V128Load8Splat(memarg) => self.v128_load8_splat(memarg)?,
            Instruction::V128Load16Splat(memarg) => self.v128_load16_splat(memarg)?,
            Instruction::V128Load32Splat(memarg) => self.v128_load32_splat(memarg)?,
            Instruction::V128Load64Splat(memarg) => self.v128_load64_splat(memarg)?,
            Instruction::V128Store(memarg) => self.v128_store(memarg)?,
            Instruction::V128Const(v) => self.v128_const(*v),
            Instruction::I8x16Shuffle(lane_16) => self.i8x16_shuffle(*lane_16),
            Instruction::I8x16Swizzle => self.i8x16_swizzle(),
            Instruction::I8x16Splat => self.i8x16_splat(),
            Instruction::I16x8Splat => self.i16x8_splat(),
            Instruction::I32x4Splat => self.i32x4_splat(),
            Instruction::I64x2Splat => self.i64x2_splat(),
            Instruction::F32x4Splat => self.f32x4_splat(),
            Instruction::F64x2Splat => self.f64x2_splat(),
            Instruction::I8x16ExtractLaneS(laneidx) => self.i8x16_extract_lane_s(*laneidx),
            Instruction::I8x16ExtractLaneU(laneidx) => self.i8x16_extract_lane_u(*laneidx),
            Instruction::I8x16ReplaceLane(laneidx) => self.i8x16_replace_lane(*laneidx),
            Instruction::I16x8ExtractLaneS(laneidx) => self.i16x8_extract_lane_s(*laneidx),
            Instruction::I16x8ExtractLaneU(laneidx) => self.i16x8_extract_lane_u(*laneidx),
            Instruction::I16x8ReplaceLane(laneidx) => self.i16x8_replace_lane(*laneidx),
            Instruction::I32x4ExtractLane(laneidx) => self.i32x4_extract_lane(*laneidx),
            Instruction::I32x4ReplaceLane(laneidx) => self.i32x4_replace_lane(*laneidx),
            Instruction::I64x2ExtractLane(laneidx) => self.i64x2_extract_lane(*laneidx),
            Instruction::I64x2ReplaceLane(laneidx) => self.i64x2_replace_lane(*laneidx),
            Instruction::F32x4ExtractLane(laneidx) => self.f32x4_extract_lane(*laneidx),
            Instruction::F32x4ReplaceLane(laneidx) => self.f32x4_replace_lane(*laneidx),
            Instruction::F64x2ExtractLane(laneidx) => self.f64x2_extract_lane(*laneidx),
            Instruction::F64x2ReplaceLane(laneidx) => self.f64x2_replace_lane(*laneidx),
            Instruction::I8x16Eq => self.i8x16_eq(),
            Instruction::I8x16Ne => self.i8x16_ne(),
            Instruction::I8x16LtS => self.i8x16_lt_s(),
            Instruction::I8x16LtU => self.i8x16_lt_u(),
            Instruction::I8x16GtS => self.i8x16_gt_s(),
            Instruction::I8x16GtU => self.i8x16_gt_u(),
            Instruction::I8x16LeS => self.i8x16_le_s(),
            Instruction::I8x16LeU => self.i8x16_le_u(),
            Instruction::I8x16GeS => self.i8x16_ge_s(),
            Instruction::I8x16GeU => self.i8x16_ge_u(),
            Instruction::I16x8Eq => self.i16x8_eq(),
            Instruction::I16x8Ne => self.i16x8_ne(),
            Instruction::I16x8LtS => self.i16x8_lt_s(),
            Instruction::I16x8LtU => self.i16x8_lt_u(),
            Instruction::I16x8GtS => self.i16x8_gt_s(),
            Instruction::I16x8GtU => self.i16x8_gt_u(),
            Instruction::I16x8LeS => self.i16x8_le_s(),
            Instruction::I16x8LeU => self.i16x8_le_u(),
            Instruction::I16x8GeS => self.i16x8_ge_s(),
            Instruction::I16x8GeU => self.i16x8_ge_u(),
            Instruction::I32x4Eq => self.i32x4_eq(),
            Instruction::I32x4Ne => self.i32x4_ne(),
            Instruction::I32x4LtS => self.i32x4_lt_s(),
            Instruction::I32x4LtU => self.i32x4_lt_u(),
            Instruction::I32x4GtS => self.i32x4_gt_s(),
            Instruction::I32x4GtU => self.i32x4_gt_u(),
            Instruction::I32x4LeS => self.i32x4_le_s(),
            Instruction::I32x4LeU => self.i32x4_le_u(),
            Instruction::I32x4GeS => self.i32x4_ge_s(),
            Instruction::I32x4GeU => self.i32x4_ge_u(),
            Instruction::F32x4Eq => self.f32x4_eq(),
            Instruction::F32x4Ne => self.f32x4_ne(),
            Instruction::F32x4Lt => self.f32x4_lt(),
            Instruction::F32x4Gt => self.f32x4_gt(),
            Instruction::F32x4Le => self.f32x4_le(),
            Instruction::F32x4Ge => self.f32x4_ge(),
            Instruction::F64x2Eq => self.f64x2_eq(),
            Instruction::F64x2Ne => self.f64x2_ne(),
            Instruction::F64x2Lt => self.f64x2_lt(),
            Instruction::F64x2Gt => self.f64x2_gt(),
            Instruction::F64x2Le => self.f64x2_le(),
            Instruction::F64x2Ge => self.f64x2_ge(),
            Instruction::V128Not => self.v128_not(),
            Instruction::V128And => self.v128_and(),
            Instruction::V128Andnot => self.v128_andnot(),
            Instruction::V128Or => self.v128_or(),
            Instruction::V128Xor => self.v128_xor(),
            Instruction::V128Bitselect => self.v128_bitselect(),
            Instruction::V128AnyTrue => self.v128_any_true(),
            Instruction::V128Load8Lane(memarg, laneidx) => self.v128_load8_lane(memarg, *laneidx)?,
            Instruction::V128Load16Lane(memarg, laneidx) => self.v128_load16_lane(memarg, *laneidx)?,
            Instruction::V128Load32Lane(memarg, laneidx) => self.v128_load32_lane(memarg, *laneidx)?,
            Instruction::V128Load64Lane(memarg, laneidx) => self.v128_load64_lane(memarg, *laneidx)?,
            Instruction::V128Store8Lane(memarg, laneidx) => self.v128_store8_lane(memarg, *laneidx)?,
            Instruction::V128Store16Lane(memarg, laneidx) => self.v128_store16_lane(memarg, *laneidx)?,
            Instruction::V128Store32Lane(memarg, laneidx) => self.v128_store32_lane(memarg, *laneidx)?,
            Instruction::V128Store64Lane(memarg, laneidx) => self.v128_store64_lane(memarg, *laneidx)?,
            Instruction::V128Load32Zero(memarg) => self.v128_load32_zero(memarg)?,
            Instruction::V128Load64Zero(memarg) => self.v128_load64_zero(memarg)?,
            Instruction::F32x4DemoteF64x2Zero => self.f32x4_demote_f64x2_zero(),
            Instruction::F64x2PromoteLowF32x4 => self.f64x2_promote_low_f32x4(),
            Instruction::I8x16Abs => self.i8x16_abs(),
            Instruction::I8x16Neg => self.i8x16_neg(),
            Instruction::I8x16Popcnt => self.i8x16_popcnt(),
            Instruction::I8x16AllTrue => self.i8x16_all_true(),
            Instruction::I8x16Bitmask => self.i8x16_bitmask(),
            Instruction::I8x16NarrowI16x8S => self.i8x16_narrow_i16x8_s(),
            Instruction::I8x16NarrowI16x8U => self.i8x16_narrow_i16x8_u(),
            Instruction::F32x4Ceil => self.f32x4_ceil(),
            Instruction::F32x4Floor => self.f32x4_floor(),
            Instruction::F32x4Trunc => self.f32x4_trunc(),
            Instruction::F32x4Nearest => self.f32x4_nearest(),
            Instruction::I8x16Shl => self.i8x16_shl(),
            Instruction::I8x16ShrS => self.i8x16_shr_s(),
            Instruction::I8x16ShrU => self.i8x16_shr_u(),
            Instruction::I8x16Add => self.i8x16_add(),
            Instruction::I8x16AddSatS => self.i8x16_add_sat_s(),
            Instruction::I8x16AddSatU => self.i8x16_add_sat_u(),
            Instruction::I8x16Sub => self.i8x16_sub(),
            Instruction::I8x16SubSatS => self.i8x16_sub_sat_s(),
            Instruction::I8x16SubSatU => self.i8x16_sub_sat_u(),
            Instruction::F64x2Ceil => self.f64x2_ceil(),
            Instruction::F64x2Floor => self.f64x2_floor(),
            Instruction::I8x16MinS => self.i8x16_min_s(),
            Instruction::I8x16MinU => self.i8x16_min_u(),
            Instruction::I8x16MaxS => self.i8x16_max_s(),
            Instruction::I8x16MaxU => self.i8x16_max_u(),
            Instruction::F64x2Trunc => self.f64x2_trunc(),
            Instruction::I8x16AvgrU => self.i8x16_avgr_u(),
            Instruction::I16x8ExtaddPairwiseI8x16S => self.i16x8_extadd_pairwise_i8x16_s(),
            Instruction::I16x8ExtaddPairwiseI8x16U => self.i16x8_extadd_pairwise_i8x16_u(),
            Instruction::I32x4ExtaddPairwiseI16x8S => self.i32x4_extadd_pairwise_i16x8_s(),
            Instruction::I32x4ExtaddPairwiseI16x8U => self.i32x4_extadd_pairwise_i16x8_u(),
            Instruction::I16x8Abs(_) => self.i16x8_abs(),
            Instruction::I16x8Neg(_) => self.i16x8_neg(),
            Instruction::I16x8Q15mulrSatS(_) => self.i16x8_q15mulr_sat_s(),
            Instruction::I16x8AllTrue(_) => self.i16x8_all_true(),
            Instruction::I16x8Bitmask(_) => self.i16x8_bitmask(),
            Instruction::I16x8NarrowI32x4S(_) => self.i16x8_narrow_i32x4_s(),
            Instruction::I16x8NarrowI32x4U(_) => self.i16x8_narrow_i32x4_u(),
            Instruction::I16x8ExtendLowI8x16S(_) => self.i16x8_extend_low_i8x16_s(),
            Instruction::I16x8ExtendHighI8x16S(_) => self.i16x8_extend_high_i8x16_s(),
            Instruction::I16x8ExtendLowI8x16U(_) => self.i16x8_extend_low_i8x16_u(),
            Instruction::I16x8ExtendHighI8x16U(_) => self.i16x8_extend_high_i8x16_u(),
            Instruction::I16x8Shl(_) => self.i16x8_shl(),
            Instruction::I16x8ShrS(_) => self.i16x8_shr_s(),
            Instruction::I16x8ShrU(_) => self.i16x8_shr_u(),
            Instruction::I16x8Add(_) => self.i16x8_add(),
            Instruction::I16x8AddSatS(_) => self.i16x8_add_sat_s(),
            Instruction::I16x8AddSatU(_) => self.i16x8_add_sat_u(),
            Instruction::I16x8Sub(_) => self.i16x8_sub(),
            Instruction::I16x8SubSatS(_) => self.i16x8_sub_sat_s(),
            Instruction::I16x8SubSatU(_) => self.i16x8_sub_sat_u(),
            Instruction::F64x2Nearest(_) => self.f64x2_nearest(),
            Instruction::I16x8Mul(_) => self.i16x8_mul(),
            Instruction::I16x8MinS(_) => self.i16x8_min_s(),
            Instruction::I16x8MinU(_) => self.i16x8_min_u(),
            Instruction::I16x8MaxS(_) => self.i16x8_max_s(),
            Instruction::I16x8MaxU(_) => self.i16x8_max_u(),
            Instruction::I16x8AvgrU(_) => self.i16x8_avgr_u(),
            Instruction::I16x8ExtmulLowI8x16S(_) => self.i16x8_extmul_low_i8x16_s(),
            Instruction::I16x8ExtmulHighI8x16S(_) => self.i16x8_extmul_high_i8x16_s(),
            Instruction::I16x8ExtmulLowI8x16U(_) => self.i16x8_extmul_low_i8x16_u(),
            Instruction::I16x8ExtmulHighI8x16U(_) => self.i16x8_extmul_high_i8x16_u(),
            Instruction::I32x4Abs(_) => self.i32x4_abs(),
            Instruction::I32x4Neg(_) => self.i32x4_neg(),
            Instruction::I32x4AllTrue(_) => self.i32x4_all_true(),
            Instruction::I32x4Bitmask(_) => self.i32x4_bitmask(),
            Instruction::I32x4ExtendLowI16x8S(_) => self.i32x4_extend_low_i16x8_s(),
            Instruction::I32x4ExtendHighI16x8S(_) => self.i32x4_extend_high_i16x8_s(),
            Instruction::I32x4ExtendLowI16x8U(_) => self.i32x4_extend_low_i16x8_u(),
            Instruction::I32x4ExtendHighI16x8U(_) => self.i32x4_extend_high_i16x8_u(),
            Instruction::I32x4Shl(_) => self.i32x4_shl(),
            Instruction::I32x4ShrS(_) => self.i32x4_shr_s(),
            Instruction::I32x4ShrU(_) => self.i32x4_shr_u(),
            Instruction::I32x4Add(_) => self.i32x4_add(),
            Instruction::I32x4Sub(_) => self.i32x4_sub(),
            Instruction::I32x4Mul(_) => self.i32x4_mul(),
            Instruction::I32x4MinS(_) => self.i32x4_min_s(),
            Instruction::I32x4MinU(_) => self.i32x4_min_u(),
            Instruction::I32x4MaxS(_) => self.i32x4_max_s(),
            Instruction::I32x4MaxU(_) => self.i32x4_max_u(),
            Instruction::I32x4DotI16x8S(_) => self.i32x4_dot_i16x8_s(),
            Instruction::I32x4ExtmulLowI16x8S(_) => self.i32x4_extmul_low_i16x8_s(),
            Instruction::I32x4ExtmulHighI16x8S(_) => self.i32x4_extmul_high_i16x8_s(),
            Instruction::I32x4ExtmulLowI16x8U(_) => self.i32x4_extmul_low_i16x8_u(),
            Instruction::I32x4ExtmulHighI16x8U(_) => self.i32x4_extmul_high_i16x8_u(),
            Instruction::I64x2Abs(_) => self.i64x2_abs(),
            Instruction::I64x2Neg(_) => self.i64x2_neg(),
            Instruction::I64x2AllTrue(_) => self.i64x2_all_true(),
            Instruction::I64x2Bitmask(_) => self.i64x2_bitmask(),
            Instruction::I64x2ExtendLowI32x4S(_) => self.i64x2_extend_low_i32x4_s(),
            Instruction::I64x2ExtendHighI32x4S(_) => self.i64x2_extend_high_i32x4_s(),
            Instruction::I64x2ExtendLowI32x4U(_) => self.i64x2_extend_low_i32x4_u(),
            Instruction::I64x2ExtendHighI32x4U(_) => self.i64x2_extend_high_i32x4_u(),
            Instruction::I64x2Shl(_) => self.i64x2_shl(),
            Instruction::I64x2ShrS(_) => self.i64x2_shr_s(),
            Instruction::I64x2ShrU(_) => self.i64x2_shr_u(),
            Instruction::I64x2Add(_) => self.i64x2_add(),
            Instruction::I64x2Sub(_) => self.i64x2_sub(),
            Instruction::I64x2Mul(_) => self.i64x2_mul(),
            Instruction::I64x2Eq(_) => self.i64x2_eq(),
            Instruction::I64x2Ne(_) => self.i64x2_ne(),
            Instruction::I64x2LtS(_) => self.i64x2_lt_s(),
            Instruction::I64x2GtS(_) => self.i64x2_gt_s(),
            Instruction::I64x2LeS(_) => self.i64x2_le_s(),
            Instruction::I64x2GeS(_) => self.i64x2_ge_s(),
            Instruction::I64x2ExtmulLowI32x4S(_) => self.i64x2_extmul_low_i32x4_s(),
            Instruction::I64x2ExtmulHighI32x4S(_) => self.i64x2_extmul_high_i32x4_s(),
            Instruction::I64x2ExtmulLowI32x4U(_) => self.i64x2_extmul_low_i32x4_u(),
            Instruction::I64x2ExtmulHighI32x4U(_) => self.i64x2_extmul_high_i32x4_u(),
            Instruction::F32x4Abs(_) => self.f32x4_abs(),
            Instruction::F32x4Neg(_) => self.f32x4_neg(),
            Instruction::F32x4Sqrt(_) => self.f32x4_sqrt(),
            Instruction::F32x4Add(_) => self.f32x4_add(),
            Instruction::F32x4Sub(_) => self.f32x4_sub(),
            Instruction::F32x4Mul(_) => self.f32x4_mul(),
            Instruction::F32x4Div(_) => self.f32x4_div(),
            Instruction::F32x4Min(_) => self.f32x4_min(),
            Instruction::F32x4Max(_) => self.f32x4_max(),
            Instruction::F32x4Pmin(_) => self.f32x4_pmin(),
            Instruction::F32x4Pmax(_) => self.f32x4_pmax(),
            Instruction::F64x2Abs(_) => self.f64x2_abs(),
            Instruction::F64x2Neg(_) => self.f64x2_neg(),
            Instruction::F64x2Sqrt(_) => self.f64x2_sqrt(),
            Instruction::F64x2Add(_) => self.f64x2_add(),
            Instruction::F64x2Sub(_) => self.f64x2_sub(),
            Instruction::F64x2Mul(_) => self.f64x2_mul(),
            Instruction::F64x2Div(_) => self.f64x2_div(),
            Instruction::F64x2Min(_) => self.f64x2_min(),
            Instruction::F64x2Max(_) => self.f64x2_max(),
            Instruction::F64x2Pmin(_) => self.f64x2_pmin(),
            Instruction::F64x2Pmax(_) => self.f64x2_pmax(),
            Instruction::I32x4TruncSatF32x4S(_) => self.i32x4_trunc_sat_f32x4_s(),
            Instruction::I32x4TruncSatF32x4U(_) => self.i32x4_trunc_sat_f32x4_u(),
            Instruction::F32x4ConvertI32x4S(_) => self.f32x4_convert_i32x4_s(),
            Instruction::F32x4ConvertI32x4U(_) => self.f32x4_convert_i32x4_u(),
            Instruction::I32x4TruncSatF64x2SZero(_) => self.i32x4_trunc_sat_f64x2_s_zero(),
            Instruction::I32x4TruncSatF64x2UZero(_) => self.i32x4_trunc_sat_f64x2_u_zero(),
            Instruction::F64x2ConvertLowI32x4S(_) => self.f64x2_convert_low_i32x4_s(),
            Instruction::F64x2ConvertLowI32x4U(_) => self.f64x2_convert_low_i32x4_u(),
        };

        Ok(())
    }
}
